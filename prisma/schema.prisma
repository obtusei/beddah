generator client {
  provider = "prisma-client-js"
}

// // generator dbml {
// //   provider = "prisma-dbml-generator"
// }

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL")
// }

// datasource db {
//   provider = "sqlite"
//   url      = "file:./eddah.db"
// }

// enum UserType {
//   user
//   admin
// }

// enum AdoptStatus {
//   pending
//   accepted
//   rejected
// }

// enum RescueStatus {
//   pending
//   rescued
//   confirmed
// }


model Admin {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model Org {
  id          String      @id @default(cuid())
  name        String
  email       String      @unique
  password    String
  bio         String?
  isVerified  Boolean     @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  location    String?
  phone       String?
  image       String?
  rescues     Rescues[]
  adopt       Adopt[]
  pets        Pet[]
  communities Community[]
}

model Rescues {
  id          String       @id @default(cuid())
  by          User?        @relation(fields: [userId], references: [id])
  pet         Pet?         @relation(fields: [petId], references: [id])
  petId       String?
  location    Location?    @relation(fields: [locationId], references: [id])
  status      String? @default("pending") //RescueStatus @default(pending)
  description String?
  image       String?
  org         Org[]
  locationId  String?
  userId      String?
}

model Location {
  id      String    @id @default(cuid())
  name    String?
  lat     Float?
  lon     Float?
  Rescues Rescues[]
}

model User {
  id                  String        @id @default(cuid())
  email               String        @unique
  name                String?
  bio                 String?
  password            String
  image               String?
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  type                String        @default("user")
  communitiesFollowed Community[]
  Pet                 Pet[]
  Adopt               Adopt[]
  Saved               Saved[]
  vet                 Veterinarian?
  Rescues             Rescues[]
  notifications       Notification[]
  posts               CommunityPost[]
}

model Notification{
  id        String   @id @default(cuid())
  title     String
  desc      String?
  createdAt DateTime @default(now())
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Veterinarian {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  location  String?
  shopName  String?
  shopImage String?
  contact   String?
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?  @unique
}

model Saved {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
  Pet       Pet?     @relation(fields: [petId], references: [id])
  petId     String?

  @@unique([userId, petId])
}

model Community {
  id        String   @id @default(cuid())
  name      String
  username  String   @unique
  bio       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts    CommunityPost[]
  members   User[]
  creator   Org?     @relation(fields: [creatorId], references: [id])
  creatorId     String?
}


model CommunityPost{
  id        String   @id @default(cuid())
  image String?
  content String?
  createdAt DateTime @default(now())
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  community Community? @relation(fields: [communityId], references: [id])
  communityId String?
}
model Pet {
  id           String    @id @default(cuid())
  name         String
  bio          String?
  age          Int?
  breed        String?
  gender       String?
  image        String?
  characters   String?//[]
  dieases      String?//[]
  vaccinations String?//[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  Adopt        Adopt[]
  Saved        Saved[]
  owner        User?     @relation(fields: [ownerId], references: [id])
  ownerId      String?
  Rescues      Rescues[]
  Org          Org?      @relation(fields: [orgId], references: [id])
  orgId        String?
}

model Adopt {
  id        String       @id @default(cuid())
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  status    String? @default("pending")//AdoptStatus? @default(pending)
  pet       Pet?         @relation(fields: [petId], references: [id])
  petId     String?
  user      User?        @relation(fields: [userId], references: [id])
  userId    String?
  Org       Org?         @relation(fields: [orgId], references: [id])
  orgId     String?

  @@unique([userId, petId])
  @@unique([orgId, petId])
}


// model NecUser {
//   id           String         @id @default(cuid())
//   email        String         @unique
//   name         String?
//   bio          String?
//   password     String
//   image        String?
//   createdAt    DateTime       @default(now())
//   updatedAt    DateTime       @updatedAt
//   type         String         @default("student")
//   news         NecNews[]
//   fee          NecFee[]
//   notices      NecNotices[]
//   busPass      NecBusPass?
//   books        NecBook[]
//   necResources NecResources[]
// }

// model NecNews {
//   id        String   @id @default(cuid())
//   title     String
//   content   String
//   image     String?
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   author    NecUser? @relation(fields: [authorId], references: [id])
//   authorId  String?
// }

// model NecFee {
//   id        String   @id @default(cuid())
//   amount    String
//   semester  String
//   image     String?
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   author    NecUser? @relation(fields: [authorId], references: [id])
//   authorId  String?
// }

// model NecNotices {
//   id       String   @id @default(cuid())
//   title    String?
//   content  String?
//   image    String?
//   author   NecUser? @relation(fields: [authorId], references: [id])
//   authorId String?
// }

// model NecBusPass {
//   id       String    @id @default(cuid())
//   amount   String?
//   semester String?
//   validity DateTime?
//   author   NecUser?  @relation(fields: [authorId], references: [id])
//   authorId String?   @unique
// }

// model NecBook {
//   id      String    @id @default(cuid())
//   title   String
//   author  String?
//   image   String?
//   dueDate String?
//   user    NecUser[]
// }

// model NecResources {
//   id       String   @id @default(cuid())
//   title    String
//   content  String?
//   links    String?//[]
//   author   NecUser? @relation(fields: [authorId], references: [id])
//   authorId String?
// }
